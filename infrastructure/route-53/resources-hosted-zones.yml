Resources:
  OAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Access to S3 bucket
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !ImportValue s3-sit-MapKrakenLabsBucketName
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${OAI}"
            Action: "s3:GetObject"
            Resource: !Join ['', ['arn:aws:s3:::', !ImportValue 's3-sit-MapKrakenLabsBucketName', '/*']]
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: mapkraken-labs-bucket.s3.us-east-1.amazonaws.com
            Id: S3Origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${OAI}"
        Enabled: true
        DefaultRootObject: index.html
        Aliases:
          - mapkraken.com
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods: ["GET", "HEAD"]
          CachedMethods: ["GET", "HEAD"]
          ForwardedValues:
            QueryString: false
        ViewerCertificate:
          AcmCertificateArn: arn:aws:acm:us-east-1:273354623129:certificate/176ff384-0b12-4138-9036-5be0ead16be4
          SslSupportMethod: sni-only
          # MinimumProtocolVersion: TLSv1.2_2021
        Comment: "CloudFront distribution for MapKrakenLabs S3 website"
  WebsiteARecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !ImportValue dns-sit-HostedZoneId
      Name: "mapkraken.com"
      Type: "A"
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2
        DNSName: !GetAtt CloudFrontDistribution.DomainName
Outputs:
  CloudFrontURL:
    Value: !GetAtt CloudFrontDistribution.DomainName
