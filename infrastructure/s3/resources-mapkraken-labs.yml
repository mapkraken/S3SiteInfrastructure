Resources:
  SiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:provider.stage}-${self:custom.environment.BUCKET_NAME}
      WebsiteConfiguration:
        IndexDocument: index.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: false
        RestrictPublicBuckets: false
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      Tags:
        - Key: Stage
          Value: ${self:provider.stage}
  
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    DependsOn:
      - SiteBucket
    Properties:
      Bucket: !Ref SiteBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: 
              - "s3:GetObject"
            Resource: !Join ['', ['arn:aws:s3:::', !Ref SiteBucket, '/*']]

  SiteBucketLabs:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:provider.stage}-labs-${self:custom.environment.BUCKET_NAME}
      WebsiteConfiguration:
        IndexDocument: index.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: false
        RestrictPublicBuckets: false
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced

  TerritoryMapperWebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:provider.stage}-territory-mapper-${self:custom.environment.BUCKET_NAME}      
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: false
        RestrictPublicBuckets: false
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      WebsiteConfiguration:
        IndexDocument: index.html
        # ErrorDocument: error.html
      Tags:
        - Key: Name
          Value: !Sub territory.mapper.mapkraken.com
    
    # S3 Bucket Policy for Public Read Access
  TerritoryMapperBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref TerritoryMapperWebsiteBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Sub arn:aws:s3:::${TerritoryMapperWebsiteBucket}/*

  BucketPolicyLabs:
    Type: AWS::S3::BucketPolicy
    DependsOn:
      - SiteBucketLabs
    Properties:
      Bucket: !Ref SiteBucketLabs
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: "*"
            Action:
              - "s3:GetObject"
            Resource: !Join ['', ['arn:aws:s3:::', !Ref SiteBucketLabs, '/*']]
  
  LambdaCodeBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ${self:provider.stage}-lambda-code-bucket-koop
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: Name
          Value: ${self:provider.stage}-lambda-code-bucket-koop
        - Key: Purpose
          Value: Lambda Deployment Packages

Outputs:
  BucketName:
    Description: "Name of the ${self:custom.environment.APP_NAME} site bucket"
    Value: !Ref SiteBucket
    Export:
      Name: !Sub "${self:provider.stage}-BucketName"
  BucketNameLabs:
    Description: "Name of the ${self:custom.environment.APP_NAME} site bucket in labs"
    Value: !Ref SiteBucketLabs
    Export:
      Name: !Sub "${self:provider.stage}-BucketNameLabs"
  LambdaCodeBucket:
    Description: "Name of the ${self:custom.environment.APP_NAME} site bucket in labs"
    Value: !Ref LambdaCodeBucket
    Export:
      Name: !Sub "${self:provider.stage}-LambdaCodeBucket"

